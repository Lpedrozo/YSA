@model YSA.Web.Models.ViewModels.HomeViewModel
@{
    ViewData["Title"] = "Yo Soy Arte | Tu Comunidad Artística";
}

<style>
    /* ---------------------------- */
    :root {
        --color-primary-action: #000000;
        --color-secondary: #343a40;
        --color-accent: #666666;
        --color-background: #f8f8f8;
        --color-card-bg: #ffffff;
        --color-text-dark: #212529;
        --color-text-light: #ffffff;
        --color-border: #ced4da;
        --color-alert: #dc3545;
    }

    body {
        font-family: 'Poppins', sans-serif;
        background-color: var(--color-background);
        color: var(--color-text-dark);
    }

    .hero-section {
        background-image: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url('/diseño/HeaderAcademia.jpg');
        background-size: cover;
        background-position: center;
        height: 50vh;
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--color-text-light);
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.6);
    }

    .hero-title {
        font-size: 3.5rem;
        font-weight: 700;
        text-align: center;
    }

    .section-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: var(--color-secondary);
        padding-bottom: 0.5rem;
        margin-bottom: 2rem;
        display: inline-block;
    }

    .card {
        border-radius: 1rem;
        border: 1px solid #e0e0e0;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease-in-out;
        overflow: hidden;
        background-color: var(--color-card-bg);
        height: 100%;
        text-decoration: none;
        color: inherit;
    }

        .card:hover {
            transform: translateY(-5px) scale(1.01);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

    .card-img-top {
        height: 250px;
        object-fit: cover;
        width: 100%;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
    }

    .card-body .badge {
        background-color: var(--color-primary-action) !important;
        color: var(--color-text-light) !important;
        font-weight: 600;
    }

    .carousel-item {
        padding: 0 1rem;
    }

    .carousel-control-prev,
    .carousel-control-next {
        width: 5%;
    }

    .context-block {
        padding: 1.5rem;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        border: 1px solid #ddd;
        border-radius: 1rem;
        background-color: #f7f7f7;
    }

        .context-block h3 {
            font-weight: 700;
            color: var(--color-secondary);
            margin-bottom: 1rem;
        }

        .context-block p {
            color: var(--color-text-dark);
            font-size: 1rem;
            line-height: 1.6;
        }

    .artist-card-img {
        height: 250px;
        object-fit: cover;
        width: 100%;
        border-top-left-radius: 1rem;
        border-top-right-radius: 1rem;
    }

    .artist-overlay {
        display: none;
    }

    .artist-card:hover {
        cursor: pointer;
    }

    .social-icons-home a {
        color: var(--color-secondary);
        font-size: 1.5rem;
        margin: 0 0.5rem;
        transition: color 0.3s;
    }

        .social-icons-home a:hover {
            color: var(--color-primary-action);
        }

    @@media (max-width: 575.98px) {
        .hero-section {
            height: 35vh;
            /* Menos altura para dejar espacio al contenido */
        }

        .hero-title {
            font-size: 2.5rem;
        }

        .section-title {
            font-size: 2rem;
        }
        /* Ocultar flechas en móvil para mayor simplicidad */
        .carousel-control-prev,
        .carousel-control-next {
            display: none;
        }

        .carousel-inner .carousel-item {
            padding: 0;
        }

        .context-block {
            margin-bottom: 2rem;
            /* Espacio extra debajo del bloque de contexto en móvil */
        }
    }

    /* Medium devices (tablets, 768px and up) */
    @@media (min-width: 768px) and (max-width: 991.98px) {
        #artistasCarousel .col-md-6 {
            flex: 0 0 50%;
            max-width: 50%;
        }

        #eventosCarousel .col-md-6 {
            flex: 0 0 50%;
            max-width: 50%;
        }
    }

    /* Large devices (desktops, 992px and up) */
    @@media (min-width: 992px) {
        #artistasCarousel .col-lg-3 {
            flex: 0 0 25%;
            max-width: 25%;
        }

        #eventosCarousel .col-lg-4 {
            flex: 0 0 33.333333%;
            max-width: 33.333333%;
        }
    }
</style>

<div class="hero-section">
    <h1 class="hero-title">Yo Soy Arte</h1>
</div>

<div class="container px-5 pt-5">

    <div class="row mb-5 align-items-center">
        <div class="col-12 text-center mb-4">
            <h2 class="section-title">Eventos de la academia</h2>
        </div>

        <div class="col-lg-3 col-md-4 mb-4 mb-md-0">
            <div class="context-block">
                <h3 class="text-center">Aprende y Conéctate</h3>
                <p class="text-center">
                    Mantente al día con nuestros webinars, talleres y encuentros exclusivos diseñados para potenciar tus habilidades artísticas. Es la oportunidad perfecta para interactuar con expertos y otros miembros de la comunidad.
                </p>
                <p class="small text-muted mt-2 text-center">
                    ¡No te pierdas el próximo encuentro!
                </p>
            </div>
        </div>

        <div class="col-lg-9 col-md-8">
            <div id="eventosCarousel" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    @{
                        int totalEvents = Model.EventosAcademia?.Count() ?? 0;

                        int itemsPerSlideEvents = 3;
                        int totalSlidesEvents = (int)Math.Ceiling(totalEvents / (double)itemsPerSlideEvents);
                    }
                    @if (totalEvents > 0)
                    {
                        @for (int i = 0; i < totalSlidesEvents; i++)
                        {
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <div class="row g-4">
                                    @foreach (var evento in Model.EventosAcademia.Skip(i * itemsPerSlideEvents).Take(itemsPerSlideEvents))
                                    {
                                        <div class="col-lg-4 col-md-6 col-12">
                                            @* Enlace para ir al detalle del evento en Revista/DetalleEvento *@
                                            <a href="@Url.Action("DetalleEvento", "Revista", new { id = evento.Id })" class="card h-100 shadow-sm">
                                                <img src="@Url.Content(evento.UrlImagen)" class="card-img-top" alt="@evento.Titulo">
                                                <div class="card-body">
                                                    <h5 class="card-title">@evento.Titulo</h5>
                                                    <p class="card-text text-muted">@evento.FechaEvento.ToString("dd MMMM yyyy")</p>
                                                    <span class="badge bg-primary text-white">@evento.Lugar</span>
                                                </div>
                                            </a>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="carousel-item active">
                            <div class="alert alert-info text-center" role="alert">
                                No hay eventos próximos de la academia.
                            </div>
                        </div>
                    }
                </div>
                @if (totalSlidesEvents > 1)
                {
                    <button class="carousel-control-prev" type="button" data-bs-target="#eventosCarousel" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Anterior</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#eventosCarousel" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Siguiente</span>
                    </button>
                }
            </div>
        </div>
    </div>

    <hr class="my-5" style="border-top: 1px solid var(--color-border);" />

    <div class="row mb-5 align-items-center">
        <div class="col-12 text-center mb-4">
            <h2 class="section-title">Nuestros maestros</h2>
        </div>

        <div class="col-lg-9 col-md-8 order-md-1">
            <div id="artistasCarousel" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    @{
                        int itemsPerSlideArtistas = 4;
                        int totalArtists = Model.Artistas?.Count() ?? 0;

                        int totalSlidesArtistas = (int)Math.Ceiling(totalArtists / (double)itemsPerSlideArtistas);
                    }
                    @if (totalArtists > 0)
                    {
                        @for (int i = 0; i < totalSlidesArtistas; i++)
                        {
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <div class="row g-4">
                                    @foreach (var artista in Model.Artistas.Skip(i * itemsPerSlideArtistas).Take(itemsPerSlideArtistas))
                                    {
                                        <div class="col-lg-3 col-md-6 col-12">
                                            @* Enlace para ir al detalle del artista en Artista/Detalles *@
                                            <a href="@Url.Action("Detalles", "Artista", new { id = artista.Id })" class="card artist-card h-100 shadow-sm" data-artista-id="@artista.Id">
                                                <img src="@(string.IsNullOrEmpty(artista.Usuario?.UrlImagen) ? "https://via.placeholder.com/400x400?text=Sin+Foto" : Url.Content(artista.Usuario.UrlImagen))"
                                                     class="card-img-top artist-card-img" alt="Foto de @artista.Usuario.Nombre" />
                                                <div class="card-body text-center">
                                                    <h5 class="card-title">@artista.Usuario.Nombre @artista.Usuario.Apellido</h5>
                                                </div>
                                            </a>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="carousel-item active">
                            <div class="alert alert-info text-center" role="alert">
                                No hay artistas destacados para mostrar.
                            </div>
                        </div>
                    }
                </div>
                @if (totalSlidesArtistas > 1)
                {
                    <button class="carousel-control-prev" type="button" data-bs-target="#artistasCarousel" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Anterior</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#artistasCarousel" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Siguiente</span>
                    </button>
                }
            </div>
        </div>

        <div class="col-lg-3 col-md-4 order-md-2 mt-4 mt-md-0">
            <div class="context-block text-center">
                <h3>Talento y perfiles</h3>
                <p>
                    Explora los portafolios de los creadores más brillantes de nuestra comunidad. Cada artista es una fuente de inspiración y creatividad única. Conoce sus obras y sus historias.
                </p>
            </div>
        </div>
    </div>

</div>

<div class="about-us-section text-center mb-5 pb-5">
    <h2 class="section-title">Quiénes somos</h2>
    <div class="container">
        <div class="row g-4 justify-content-center">
            <div class="col-lg-3 col-md-6">
                <div class="card icon-card h-100">
                    <div class="card-body d-flex flex-column align-items-center justify-content-center">
                        <i class="fas fa-bullseye fa-3x mb-3"></i>
                        <h3 class="h5">Nuestra Misión</h3>
                        <p>Facilitar el aprendizaje y la expresión artística, conectando a creadores y entusiastas en una comunidad vibrante y colaborativa.</p>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="card icon-card h-100">
                    <div class="card-body d-flex flex-column align-items-center justify-content-center">
                        <i class="fas fa-gem fa-3x mb-3"></i>
                        <h3 class="h5">Nuestros valores</h3>
                        <ul class="list-unstyled mb-0">
                            <li>Pasión por el Arte</li>
                            <li>Innovación Continua</li>
                            <li>Inclusión y Respeto</li>
                            <li>Excelencia Educativa</li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="card icon-card h-100">
                    <div class="card-body d-flex flex-column align-items-center justify-content-center">
                        <i class="fas fa-map-marker-alt fa-3x mb-3"></i>
                        <h3 class="h5">Ubicación y contacto</h3>
                        <p>Av. Principal #123, Ciudad Creativa, País Imaginario</p>
                        <p>Email: contacto@yosoyarte.com</p>
                        <p class="mb-0">Tel: +58 123 456 7890</p>
                        <div class="social-icons-home mt-2">
                            <a href="URL_TU_INSTAGRAM" target="_blank" title="Instagram"><i class="fab fa-instagram"></i></a>
                            <a href="URL_TU_FACEBOOK" target="_blank" title="Facebook"><i class="fab fa-facebook-f"></i></a>
                            <a href="URL_TU_TWITTER" target="_blank" title="Twitter/X"><i class="fab fa-twitter"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-5 history-section pb-5 mb-5">
            <h3 class="section-title">Nuestra historia</h3>
            <div class="row justify-content-center">
                <div class="col-lg-8">
                    <p class="fs-5">
                        Fundada en 2020 por un colectivo de artistas apasionados, Yo Soy Arte nació con la visión de democratizar la educación artística. Comenzamos como un pequeño blog, compartiendo tutoriales y consejos, y rápidamente evolucionamos hasta convertirnos en una plataforma integral que ofrece cursos, una revista digital y un espacio para que los artistas muestren su portafolio.
                    </p>
                    <p class="fs-5">
                        Hoy en día, somos una comunidad global que sigue creciendo, inspirando y capacitando a la próxima generación de creadores. Nuestra meta es ser el puente entre la pasión por el arte y la realización profesional.
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {

            // Se elimina la función de click del artista ya que ahora el <a> gestiona el enlace
            /*
            $('.artist-card').on('click', function (e) {
                e.preventDefault();
                const artistaId = $(this).data('artista-id');
                if (artistaId) {
                    window.location.href = `@Url.Action("Detalles", "Artista", new { id = "" })/` + artistaId;
                }
            });
            */

            function getItemsPerSlide() {
                if (window.innerWidth >= 992) { // Desktop (lg)
                    return {
                        eventos: 3,
                        artistas: 4
                    };
                } else if (window.innerWidth >= 768) { // Tablet (md)
                    return {
                        eventos: 2,
                        artistas: 2
                    };
                } else { // Mobile (sm, xs)
                    return {
                        eventos: 1,
                        artistas: 1
                    };
                }
            }


            function restructureCarouselBootstrap(carouselId, rawItems, itemsPerSlide) {
                const $carouselInner = $(`#${carouselId} .carousel-inner`);
                $carouselInner.empty(); // Limpiar el contenido existente

                if (rawItems.length === 0) {
                    // Se usa el mensaje correcto para cada carrusel
                    const alertMessage = carouselId === 'eventosCarousel'
                        ? 'No hay eventos próximos de la academia.'
                        : 'No hay artistas destacados para mostrar.';
                    $carouselInner.append(`<div class="carousel-item active"><div class="alert alert-info text-center" role="alert">${alertMessage}</div></div>`);
                    return;
                }

                const totalSlides = Math.ceil(rawItems.length / itemsPerSlide);

                for (let i = 0; i < totalSlides; i++) {
                    const $slide = $(`<div class="carousel-item ${i === 0 ? 'active' : ''}"><div class="row g-4 justify-content-center"></div></div>`);
                    const $row = $slide.find('.row');
                    const startIndex = i * itemsPerSlide;
                    const itemsInSlide = rawItems.slice(startIndex, startIndex + itemsPerSlide);

                    itemsInSlide.forEach(item => {
                        const $card = $(item).clone();
                        let colClass;

                        // Las clases de columna se simplifican a la clase base de Bootstrap 5
                        // y se usan las clases de media query para asegurar la distribución correcta
                        // ya que la lógica C# inicial ya maneja la clase base col-12
                        if (carouselId === 'eventosCarousel') {
                            colClass = 'col-12';
                            if (itemsPerSlide === 2) {
                                colClass += ' col-md-6';
                            } else if (itemsPerSlide === 3) {
                                colClass += ' col-md-6 col-lg-4';
                            }
                        } else { // artistasCarousel
                            colClass = 'col-12';
                            if (itemsPerSlide === 2) {
                                colClass += ' col-md-6';
                            } else if (itemsPerSlide === 4) {
                                colClass += ' col-md-6 col-lg-3';
                            }
                        }

                        // Envuelve la tarjeta clonada en la columna correcta.
                        const $colDiv = $('<div>').addClass(colClass).append($card);
                        $row.append($colDiv);
                    });

                    $carouselInner.append($slide);
                }

                // Reiniciar el carrusel de Bootstrap
                const carouselElement = document.getElementById(carouselId);
                const bsCarousel = bootstrap.Carousel.getInstance(carouselElement);
                if (bsCarousel) {
                    bsCarousel.dispose(); // Destruir instancia anterior
                }
                // Se crea la nueva instancia del carrusel SOLO si hay elementos para evitar error si rawItems.length === 0
                if (rawItems.length > 0) {
                     new bootstrap.Carousel(carouselElement);
                }


                // Lógica de botones (mostrar/ocultar)
                $(`#${carouselId} .carousel-control-prev`).toggle(totalSlides > 1);
                $(`#${carouselId} .carousel-control-next`).toggle(totalSlides > 1);
            }

            // --- Extracción de Tarjetas Originales ---
            // Se realiza un solo parseo del código Razor para obtener TODAS las tarjetas.
            // Esto es necesario porque el código C# inicial ya ha generado los items del carrusel
            // pero el JS lo reestructura para la vista móvil/tablet/desktop.

            const originalEventCards = [];
            $('#eventosCarousel .carousel-item').each(function () {
                $(this).find('.row > div > a').each(function () {
                    originalEventCards.push(this);
                });
            });

            const originalArtistCards = [];
            $('#artistasCarousel .carousel-item').each(function () {
                $(this).find('.row > div > a').each(function () {
                    originalArtistCards.push(this);
                });
            });

            // Se inicializa el carrusel con la lógica de responsividad de JS
            function initializeCarousels() {
                const itemsConfig = getItemsPerSlide();
                restructureCarouselBootstrap('eventosCarousel', originalEventCards, itemsConfig.eventos);
                restructureCarouselBootstrap('artistasCarousel', originalArtistCards, itemsConfig.artistas);
            }

            // Llamada inicial
            initializeCarousels();

            // Ejecutar la función cuando la ventana cambia de tamaño (debounce)
            let resizeTimer;
            $(window).on('resize', function (e) {
                clearTimeout(resizeTimer);
                resizeTimer = setTimeout(function () {
                    initializeCarousels();
                }, 250); // Un pequeño retardo para evitar la reestructuración excesiva
            });
        });
    </script>
}