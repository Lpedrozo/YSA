@using YSA.Web.Models.ViewModels
@model YSA.Web.Models.ViewModels.HomeViewModel
@{
    ViewData["Title"] = "Yo Soy Arte | Tu Comunidad Artística";
}

<style>
    /* ---------------------------- */
    /* ESTILOS CSS MEJORADOS - Revamped for Magazine Look */
    /* ---------------------------- */
    :root {
        /* Paleta de Colores actualizada con el nuevo verde (#6db53e) */
        --color-primary-action: #6db53e; /* ¡NUEVO VERDE DE IMPACTO! */
        --color-secondary: #0A0A0A; /* Negro profundo para títulos */
        --color-accent: #6c757d; /* Gris para texto de soporte */
        --color-background: #f4f4f4; /* Fondo más suave */
        --color-card-bg: #ffffff;
        --color-text-dark: #212529;
        --color-text-light: #ffffff;
        --color-border: #E8E8E8;
        --color-alert: #dc3545;
        /* Nuevas variables */
        --color-shadow-light: rgba(109, 181, 62, 0.15); /* Sombra ligera de acento VERDE */
        --color-dark-green: #5A9933; /* Un tono un poco más oscuro para hover/active */
    }

    body {
        font-family: 'Poppins', sans-serif;
        background-color: var(--color-background);
        color: var(--color-text-dark);
        line-height: 1.6;
    }

    /* --- Hero Section --- */
    .hero-section {
        /* Estilo más dramático */
        background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('/diseño/HeaderAcademia.jpg');
        background-size: cover;
        background-position: center;
        height: 60vh; /* Aumentamos la altura */
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--color-text-light);
    }

    .hero-title {
        font-size: 4.5rem; /* Más grande */
        font-weight: 900; /* Más audaz */
        letter-spacing: 2px;
        text-align: center;
        text-transform: uppercase;
        padding-bottom: 0.5rem;
    }

    .section-title {
        font-size: 3rem;
        font-weight: 800;
        color: var(--color-secondary);
        padding-bottom: 0.5rem;
        margin-bottom: 2.5rem;
        display: inline-block;
        /* Cambiamos el acento: línea más gruesa y color de impacto VERDE */
        border-bottom: 6px solid var(--color-primary-action);
        letter-spacing: 1px;
    }

    /* --- General Cards (Events/Artists) --- */
    .card-evento {
        border-radius: 0.75rem;
        border: none;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
        overflow: hidden;
        background-color: var(--color-card-bg);
        height: 100%;
        text-decoration: none;
        color: inherit;
    }

        .card-evento:hover {
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 15px 30px var(--color-shadow-light); /* Sombra que destaca VERDE */
        }

    .card-img-top {
        height: 220px;
        object-fit: cover;
        width: 100%;
        border-radius: 0;
    }

    .artist-card-img {
        height: 200px; /* Reducido para hacerla más "tarjeta" */
        border-radius: 0.5rem 0.5rem 0 0;
    }

    .card-body h5 {
        font-weight: 700;
        line-height: 1.3;
        color: var(--color-secondary);
    }

    .badge-yso {
        background-color: var(--color-primary-action) !important; /* VERDE */
        color: var(--color-text-light) !important;
        font-weight: 600;
        padding: 0.4rem 0.8rem;
        border-radius: 0.25rem;
        letter-spacing: 0.5px;
        text-transform: uppercase;
    }

    /* --- Context Block (Magazine Recortado) --- */
    .context-block {
        padding: 2rem;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        border: 4px solid var(--color-secondary); /* Borde grueso tipo caja de texto de revista */
        border-radius: 0.5rem;
        background-color: var(--color-card-bg); /* Fondo blanco para contraste */
        box-shadow: 5px 5px 0px var(--color-primary-action); /* Efecto de 'pop' VERDE */
    }

        .context-block h3 {
            font-size: 1.8rem;
            font-weight: 900;
            color: var(--color-primary-action); /* Título de acento VERDE */
            margin-bottom: 1rem;
            text-transform: uppercase;
        }

        .context-block p {
            color: var(--color-text-dark);
            font-size: 1.1rem;
            line-height: 1.5;
            margin-bottom: 0.5rem;
        }

    /* --- Featured Card (Destacado Editorial) --- */
    .featured-card {
        border-radius: 0.75rem;
        overflow: hidden;
        border: 1px solid var(--color-border);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: row;
        height: 100%;
        text-decoration: none;
        color: inherit;
        transition: transform 0.3s ease;
    }

        .featured-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);
        }

    .featured-img-container {
        width: 40%;
        min-height: 280px;
        max-height: 350px;
        overflow: hidden;
    }

    .featured-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
    }

    .featured-card:hover .featured-img {
        transform: scale(1.05);
    }

    .featured-body {
        width: 60%;
        padding: 1.5rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
        background-color: var(--color-card-bg);
    }

        .featured-body h5 {
            font-size: 1.7rem;
            font-weight: 900;
            color: var(--color-secondary);
            margin-bottom: 0.5rem;
            line-height: 1.2;
        }

    /* --- Carousel Controls --- */
    .carousel-control-prev,
    .carousel-control-next {
        width: 4%;
    }

    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        background-color: var(--color-primary-action); /* VERDE */
        border: 2px solid var(--color-text-light);
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    }

    /* --- Buttons and Links --- */
    .btn-dark {
        background-color: var(--color-secondary) !important;
        border-color: var(--color-secondary) !important;
        transition: background-color 0.3s, border-color 0.3s;
    }

        .btn-dark:hover {
            background-color: var(--color-primary-action) !important; /* VERDE */
            border-color: var(--color-primary-action) !important; /* VERDE */
        }

    /* Para los checks de la sección Quiénes Somos */
    .text-primary {
        color: var(--color-primary-action) !important; /* VERDE */
    }


    /* --- Media Queries --- */
    @@media (max-width: 991.98px) {
        .featured-card {
            flex-direction: column;
        }

        .featured-img-container,
        .featured-body {
            width: 100%;
        }

        .featured-img-container {
            height: 250px;
            max-height: none;
        }

        .featured-body {
            padding: 1rem;
        }

            .featured-body h5 {
                font-size: 1.5rem;
            }
    }

    @@media (max-width: 575.98px) {
        .hero-section {
            height: 40vh;
        }

        .hero-title {
            font-size: 2.8rem;
            border-bottom-width: 3px;
        }

        .section-title {
            font-size: 2.2rem;
            border-bottom-width: 4px;
            margin-bottom: 2rem;
        }

        .context-block {
            box-shadow: 3px 3px 0px var(--color-primary-action); /* VERDE */
        }

        .carousel-control-prev,
        .carousel-control-next {
            display: none;
        }
    }
</style>

<div class="hero-section">
    <h1 class="hero-title">Yo Soy Arte</h1>
</div>

<div class="container px-5 pt-5">

    @if (Model.EventosCategorizados.Any())
    {
        @foreach (var categoria in Model.EventosCategorizados)
        {
            string categoriaNombre = categoria.Key;
            List<EventoHomeViewModel> eventos = categoria.Value;
            string carouselId = "eventoCarousel" + categoriaNombre.Replace(" ", "");

            // Lógica para obtener el evento destacado (el primero) y el resto de eventos
            EventoHomeViewModel eventoDestacado = eventos.FirstOrDefault();
            List<EventoHomeViewModel> eventosRestantes = eventos.Skip(1).ToList();

            // Asignar el texto de contexto
            string contextTitle = "";
            string contextText = "";

            switch (categoriaNombre)
            {
                case "Conferencia":
                    contextTitle = "Conocimiento y Diálogo";
                    contextText = "Únete a las charlas con líderes y expertos del arte. Espacios para el debate, el aprendizaje y la expansión de tu perspectiva creativa.";
                    break;
                case "Galería de Arte":
                    contextTitle = "Explora el Arte Digital";
                    contextText = "Nuestras galerías virtuales presentan obras impactantes de la comunidad. Sumérgete en colecciones curadas y descubre nuevos talentos.";
                    break;
                case "Exposición":
                    contextTitle = "Muestras de Talento";
                    contextText = "Sé testigo de las exposiciones colectivas e individuales. Una vitrina para el talento de nuestros artistas y alumnos más destacados.";
                    break;
                case "Taller":
                    contextTitle = "Manos a la Obra";
                    contextText = "Perfecciona tus técnicas con nuestros talleres prácticos. Sesiones interactivas guiadas por profesionales para desarrollar habilidades específicas.";
                    break;
                case "Seminario":
                    contextTitle = "Inmersión Profunda";
                    contextText = "Seminarios especializados para dominar temas complejos. Adquiere conocimientos avanzados que transformarán tu práctica artística.";
                    break;
                default:
                    contextTitle = "Descubre y Aprende";
                    contextText = "Explora los últimos eventos de nuestra comunidad, diseñados para inspirar y conectar a artistas de todas las disciplinas.";
                    break;
            }

            <div class="row mb-5 align-items-stretch">
                <div class="col-12 text-center mb-4">
                    <h2 class="section-title">@categoriaNombre</h2>
                </div>

                @* Columna de Contexto Editorial (col-3) *@
                <div class="col-lg-3 col-md-4 mb-4 mb-md-0 d-flex">
                    <div class="context-block">
                        <h3 class="text-center">@contextTitle</h3>
                        <p class="text-center">@contextText</p>
                        <p class="small text-muted mt-2 text-center">
                            ¡Visita la sección de Revista para más!
                        </p>
                    </div>
                </div>

                @* Columna de Contenido (destacado + carrusel) (col-9) *@
                <div class="col-lg-9 col-md-8">
                    @if (eventoDestacado != null)
                    {
                        <div class="row g-4 h-100">
                            @* Tarjeta Destacada (el primer evento) *@
                            <div class="col-lg-6 col-12 d-flex">
                                <a href="@Url.Action("DetalleEvento", "Revista", new { id = eventoDestacado.Id })" class="featured-card h-100">
                                    <div class="featured-img-container">
                                        <img src="@Url.Content(eventoDestacado.UrlImagen)" class="featured-img" alt="@eventoDestacado.Titulo" />
                                    </div>
                                    <div class="featured-body">
                                        <span class="badge-yso mb-2">Destacado</span>
                                        <h5 class="card-title">@eventoDestacado.Titulo</h5>
                                        <p class="card-text text-muted">@eventoDestacado.FechaEvento.ToString("dd MMMM yyyy")</p>
                                        <p class="card-text">@eventoDestacado.Lugar</p>
                                        <small class="text-primary mt-auto">Ver detalles →</small>
                                    </div>
                                </a>
                            </div>

                            @* Carrusel de Eventos Restantes (Ocupa el resto del espacio) *@
                            @if (eventosRestantes.Any())
                            {
                                <div class="col-lg-6 col-12 d-flex">
                                    <div id="@carouselId" class="carousel slide evento-carousel w-100" data-items="2">
                                        <div class="carousel-inner">
                                            @{
                                                // Lógica inicial de Razor para permitir la extracción de cards en JS
                                                int itemsPerSlideEventsRazor = 2;
                                                int totalSlidesEvents = (int)Math.Ceiling(eventosRestantes.Count / (double)itemsPerSlideEventsRazor);
                                            }
                                            @for (int i = 0; i < totalSlidesEvents; i++)
                                            {
                                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                                    <div class="row g-4">
                                                        @foreach (var evento in eventosRestantes.Skip(i * itemsPerSlideEventsRazor).Take(itemsPerSlideEventsRazor))
                                                        {
                                                            <div class="col-12">
                                                                @* Se asegura que ocupe todo el ancho de la col-lg-6 *@
                                                                <a href="@Url.Action("DetalleEvento", "Revista", new { id = evento.Id })" class="card card-evento h-100 shadow-sm">
                                                                    <img src="@Url.Content(evento.UrlImagen)" class="card-img-top" alt="@evento.Titulo">
                                                                    <div class="card-body">
                                                                        <h5 class="card-title">@evento.Titulo</h5>
                                                                        <p class="card-text text-muted">@evento.FechaEvento.ToString("dd MMMM yyyy")</p>
                                                                        <p>@evento.Lugar</p>
                                                                    </div>
                                                                </a>
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            }
                                        </div>

                                        @* Controles del Carrusel (Solo si hay más de 2) *@
                                        @if (eventosRestantes.Count > itemsPerSlideEventsRazor)
                                        {
                                            <button class="carousel-control-prev" type="button" data-bs-target="#@carouselId" data-bs-slide="prev">
                                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                                <span class="visually-hidden">Anterior</span>
                                            </button>
                                            <button class="carousel-control-next" type="button" data-bs-target="#@carouselId" data-bs-slide="next">
                                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                                <span class="visually-hidden">Siguiente</span>
                                            </button>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info text-center" role="alert">
                            No hay eventos próximos de @categoriaNombre.
                        </div>
                    }
                </div>
            </div>

            <hr class="my-5" style="border-top: 1px solid var(--color-border);" />
        }
    }
    else
    {
        <div class="alert alert-warning text-center my-5" role="alert">
            Actualmente no hay eventos disponibles en ninguna categoría.
        </div>
        <hr class="my-5" style="border-top: 1px solid var(--color-border);" />
    }


    @* Sección de Artistas (Se mantiene la estructura original, usando card-evento) *@
    <div class="row mb-5 align-items-center">
        <div class="col-12 text-center mb-4">
            <h2 class="section-title">Nuestros maestros</h2>
        </div>

        <div class="col-lg-9 col-md-8 order-md-1">
            <div id="artistasCarousel" class="carousel slide artista-carousel">
                <div class="carousel-inner">
                    @{
                        // Lógica inicial de Razor para permitir la extracción de cards en JS
                        int itemsPerSlideArtistasRazor = 4;
                        int totalArtists = Model.Artistas?.Count() ?? 0;
                        int totalSlidesArtistas = (int)Math.Ceiling(totalArtists / (double)itemsPerSlideArtistasRazor);
                    }
                    @if (totalArtists > 0)
                    {
                        @for (int i = 0; i < totalSlidesArtistas; i++)
                        {
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <div class="row g-4">
                                    @foreach (var artista in Model.Artistas.Skip(i * itemsPerSlideArtistasRazor).Take(itemsPerSlideArtistasRazor))
                                    {
                                        <div class="col-lg-3 col-md-6 col-12">
                                            <a href="@Url.Action("Detalles", "Artista", new { id = artista.Id })" class="card card-evento artist-card h-100 shadow-sm" data-artista-id="@artista.Id">
                                                <img src="@(string.IsNullOrEmpty(artista.Usuario?.UrlImagen) ? "https://via.placeholder.com/400x400?text=Sin+Foto" : Url.Content(artista.Usuario.UrlImagen))"
                                                     class="card-img-top artist-card-img" alt="Foto de @artista.Usuario.Nombre" />
                                                <div class="card-body text-center">
                                                    <h5 class="card-title">@artista.Usuario.Nombre @artista.Usuario.Apellido</h5>
                                                </div>
                                            </a>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="carousel-item active">
                            <div class="alert alert-info text-center" role="alert">
                                No hay artistas destacados para mostrar.
                            </div>
                        </div>
                    }
                </div>
                @if (totalSlidesArtistas > 1)
                {
                    <button class="carousel-control-prev" type="button" data-bs-target="#artistasCarousel" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Anterior</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#artistasCarousel" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Siguiente</span>
                    </button>
                }
            </div>
        </div>

        <div class="col-lg-3 col-md-4 order-md-2 mt-4 mt-md-0 d-flex">
            <div class="context-block text-center">
                <h3>Talento y perfiles</h3>
                <p>
                    Explora los portafolios de los creadores más brillantes de nuestra comunidad. Cada artista es una fuente de inspiración y creatividad única. Conoce sus obras y sus historias.
                </p>
                <a href="@Url.Action("Lista", "Artista")" class="btn btn-dark mt-3">Ver Todos los Artistas</a>
            </div>
        </div>
    </div>

    @* Sección Quiénes Somos (Sin cambios estructurales) *@
    <div class="about-us-section text-center mb-5 pb-5">
        <h2 class="section-title">Quiénes somos</h2>
        <div class="container">
            <div class="row g-4 justify-content-center">
                <div class="col-lg-3 col-md-6">
                    <div class="card card-evento icon-card h-100">
                        <div class="card-body d-flex flex-column align-items-center justify-content-center">
                            <i class="fas fa-bullseye fa-3x mb-3 text-secondary"></i>
                            <h3 class="h5">Nuestra Misión</h3>
                            <p>Facilitar el aprendizaje y la expresión artística, conectando a creadores y entusiastas en una comunidad vibrante y colaborativa.</p>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6">
                    <div class="card card-evento icon-card h-100">
                        <div class="card-body d-flex flex-column align-items-center justify-content-center">
                            <i class="fas fa-gem fa-3x mb-3 text-secondary"></i>
                            <h3 class="h5">Nuestros valores</h3>
                            <ul class="list-unstyled mb-0 text-start">
                                <li><i class="fas fa-check-circle me-2 text-primary"></i> Pasión por el Arte</li>
                                <li><i class="fas fa-check-circle me-2 text-primary"></i> Innovación Continua</li>
                                <li><i class="fas fa-check-circle me-2 text-primary"></i> Inclusión y Respeto</li>
                                <li><i class="fas fa-check-circle me-2 text-primary"></i> Excelencia Educativa</li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6">
                    <div class="card card-evento icon-card h-100">
                        <div class="card-body d-flex flex-column align-items-center justify-content-center">
                            <i class="fas fa-map-marker-alt fa-3x mb-3 text-secondary"></i>
                            <h3 class="h5">Ubicación y contacto</h3>
                            <p>Av. Principal #123, Ciudad Creativa, País Imaginario</p>
                            <p>Email: contacto@yosoyarte.com</p>
                            <p class="mb-0">Tel: +58 123 456 7890</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="mt-5 history-section pb-5 mb-5">
                <h3 class="section-title">Nuestra historia</h3>
                <div class="row justify-content-center">
                    <div class="col-lg-8">
                        <p class="fs-5">
                            Fundada en 2020 por un colectivo de artistas apasionados, Yo Soy Arte nació con la visión de democratizar la educación artística. Comenzamos como un pequeño blog, compartiendo tutoriales y consejos, y rápidamente evolucionamos hasta convertirnos en una plataforma integral que ofrece cursos, una revista digital y un espacio para que los artistas muestren su portafolio.
                        </p>
                        <p class="fs-5">
                            Hoy en día, somos una comunidad global que sigue creciendo, inspirando y capacitando a la próxima generación de creadores. Nuestra meta es ser el puente entre la pasión por el arte y la realización profesional.
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {

            // --- Helper: Determinar cuántos ítems caben por slide según el tamaño de la ventana ---
            function getItemsPerSlide(isArtistCarousel) {
                if (window.innerWidth >= 992) { // Desktop (lg)
                    // Para Artistas: 4 ítems (col-9), Para Eventos: 2 ítems (col-6)
                    return isArtistCarousel ? 4 : 2;
                } else if (window.innerWidth >= 768) { // Tablet (md)
                    // Para Artistas: 2 ítems, Para Eventos: 1 ítem (en la columna col-md-8)
                    return isArtistCarousel ? 2 : 1;
                } else { // Mobile (sm, xs)
                    return 1;
                }
            }

            // --- Core: Función para reestructurar el carrusel de forma responsive ---
            function restructureCarouselBootstrap(carouselId, rawItems, itemsPerSlide, isArtistCarousel) {
                const $carouselInner = $(`#${carouselId} .carousel-inner`);
                $carouselInner.empty();

                if (rawItems.length === 0) {
                    const alertMessage = isArtistCarousel
                        ? 'No hay artistas destacados para mostrar.'
                        : `No hay eventos próximos.`;
                    $carouselInner.append(`<div class="carousel-item active"><div class="alert alert-info text-center" role="alert">${alertMessage}</div></div>`);
                    $(`#${carouselId} .carousel-control-prev`).hide();
                    $(`#${carouselId} .carousel-control-next`).hide();
                    return;
                }

                const totalSlides = Math.ceil(rawItems.length / itemsPerSlide);

                for (let i = 0; i < totalSlides; i++) {
                    const $slide = $(`<div class="carousel-item ${i === 0 ? 'active' : ''}"><div class="row g-4 justify-content-center"></div></div>`);
                    const $row = $slide.find('.row');
                    const startIndex = i * itemsPerSlide;
                    const itemsInSlide = rawItems.slice(startIndex, startIndex + itemsPerSlide);

                    itemsInSlide.forEach(item => {
                        const $card = $(item).clone();
                        let colClass = 'col-12';

                        // Determinar la clase de columna para la distribución actual
                        if (isArtistCarousel) {
                            if (itemsPerSlide === 2) colClass += ' col-md-6';
                            else if (itemsPerSlide === 4) colClass += ' col-md-6 col-lg-3';
                        } else {
                            if (itemsPerSlide === 2) colClass += ' col-lg-6';
                            else if (itemsPerSlide === 1) colClass += ' col-md-12';
                        }

                        const $colDiv = $('<div>').addClass(colClass).append($card);
                        $row.append($colDiv);
                    });

                    $carouselInner.append($slide);
                }

                // Reiniciar el carrusel de Bootstrap
                const carouselElement = document.getElementById(carouselId);

                // 1. Dispose para evitar duplicados si ya existía
                const bsCarousel = bootstrap.Carousel.getInstance(carouselElement);
                if (bsCarousel) {
                    bsCarousel.dispose();
                }

                // 2. Inicializar con intervalo: false para desactivar el autoplay.
                if (rawItems.length > 0) {
                    new bootstrap.Carousel(carouselElement, {
                        interval: false // ESTA ES LA CLAVE PARA DETENER EL AUTOPLAY
                    });
                }

                // Lógica de botones (mostrar/ocultar)
                $(`#${carouselId} .carousel-control-prev`).toggle(totalSlides > 1);
                $(`#${carouselId} .carousel-control-next`).toggle(totalSlides > 1);
            }

            // --- Extracción de Tarjetas Originales ---
            const allEventCards = {};
            $('.evento-carousel').each(function () {
                const carouselId = $(this).attr('id');
                allEventCards[carouselId] = [];

                // Se extraen todos los <a> (tarjetas) de los carousel-item
                $(this).find('.carousel-item').each(function() {
                    $(this).find('.row > div > a').each(function () {
                        allEventCards[carouselId].push(this);
                    });
                    $(this).remove(); // Vaciar el contenido original para que JS lo regenere
                });

                // Desactivar el data-bs-ride="carousel" para evitar inicialización automática
                $(this).removeAttr('data-bs-ride');
            });

            // Extracción de tarjetas de Artistas
            const originalArtistCards = [];
            $('#artistasCarousel .carousel-item').each(function () {
                $(this).find('.row > div > a').each(function () {
                    originalArtistCards.push(this);
                });
                $(this).remove(); // Vaciar carrusel original
            });
            $('#artistasCarousel').removeAttr('data-bs-ride'); // Desactivar auto-inicialización

            // --- Inicialización y Reestructuración ---
            function initializeCarousels() {
                // 1. Reestructurar carruseles de EVENTOS (recorriendo todas las categorías)
                for (const carouselId in allEventCards) {
                    const itemsConfig = getItemsPerSlide(false);
                    const rawItems = allEventCards[carouselId];
                    if (rawItems.length > 0) {
                        $(`#${carouselId} .carousel-inner`).html('');
                        restructureCarouselBootstrap(carouselId, rawItems, itemsConfig, false);
                    }
                }

                // 2. Reestructurar carrusel de ARTISTAS (es único)
                const itemsConfigArtistas = getItemsPerSlide(true);
                restructureCarouselBootstrap('artistasCarousel', originalArtistCards, itemsConfigArtistas, true);
            }

            // Llamada inicial
            initializeCarousels();

            // Ejecutar la función cuando la ventana cambia de tamaño (debounce para rendimiento)
            let resizeTimer;
            $(window).on('resize', function (e) {
                clearTimeout(resizeTimer);
                resizeTimer = setTimeout(function () {
                    initializeCarousels();
                }, 250);
            });
        });
    </script>
}