@model YSA.Web.Models.ViewModels.ConfirmacionPagoViewModel
@using System.Globalization;
@{
    ViewData["Title"] = "Confirmar Pago";

    // *** NUEVO BLOQUE RAZOR PARA CÁLCULO Y CULTURA ***
    // Definir culturas para formatear los números (punto decimal para USD, coma para VES)
    var cultureUS = new CultureInfo("en-US"); // Para USD (Moneda base)
    var cultureVE = new CultureInfo("es-VE"); // Para VES (Moneda local)

    // Cálculo del total en Bolívares (VES)
    decimal totalVes = 0;
    if (Model.TasaBCV > 0)
    {
        totalVes = Model.Total * Model.TasaBCV.Value; // Usamos .Value porque TasaBCV es Nullable<decimal>
    }
    // *** FIN BLOQUE RAZOR ***
}

<style>
    /* VARIABLES DE COLOR MONOCROMÁTICAS */
    :root {
        --color-primary: #000000;
        --color-secondary: #333333;
        --color-accent: #cccccc;
        --color-background: #ffffff;
        --color-card-bg: #f8f8f8;
        --color-text-dark: #212529;
        --color-text-light: #ffffff;
        --color-success: #333333; /* Usado para texto de éxito en B/N */
    }

    /* *** NUEVO ESTILO: Para resaltar el total en Bolívares *** */
    .text-ves {
        color: #008000; /* Verde para destacar el monto en Bolívares */
        font-weight: 700;
        font-size: 1.2em;
    }

    /* ... (Mantenemos el resto de sus estilos) ... */

    body {
        font-family: 'Poppins', sans-serif;
        background-color: var(--color-background);
        color: var(--color-text-dark);
    }

    h1 {
        color: var(--color-primary);
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    /* ESTILO DE TARJETA Y CABECERAS */
    .card {
        border: 1px solid var(--color-accent);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
        border-radius: 0.75rem;
        background-color: var(--color-card-bg);
    }

    .card-header {
        background-color: var(--color-secondary);
        color: var(--color-text-light);
        font-weight: 600;
        border-radius: 0.7rem 0.7rem 0 0;
    }

    .list-group-item {
        background-color: var(--color-background);
        border-color: var(--color-accent);
        /* Reducimos el padding en móviles para ahorrar espacio vertical */
        padding: 0.75rem 1rem;
    }

    .badge.bg-primary {
        background-color: var(--color-primary) !important;
    }

    /* BOTONES */
    .btn-primary {
        background-color: var(--color-primary) !important;
        border-color: var(--color-primary) !important;
        color: var(--color-text-light) !important;
        font-weight: 600;
        text-transform: uppercase;
    }

        .btn-primary:hover {
            background-color: var(--color-secondary) !important;
            border-color: var(--color-secondary) !important;
        }

    /* CAJA DE INFORMACIÓN BANCARIA DINÁMICA */
    #payment-info-box {
        border: 1px dashed var(--color-secondary); /* Borde punteado para destacar */
        background-color: var(--color-background);
        padding: 1rem;
        border-radius: 0.5rem;
        margin-top: 1rem;
    }

        #payment-info-box h5 {
            color: var(--color-primary);
            font-weight: 700;
        }

    .info-item {
        margin-bottom: 0.5rem;
    }

        .info-item strong {
            display: inline-block;
            min-width: 120px; /* Asegura alineación vertical en info bancaria */
        }

    .btn-whatsapp-assistance {
        background-color: #25d366 !important; /* Verde WhatsApp */
        border-color: #25d366 !important;
        color: white !important;
        font-weight: 600;
        transition: background-color 0.3s ease;
    }

        .btn-whatsapp-assistance:hover {
            background-color: #1faa59 !important; /* Un verde un poco más oscuro al hacer hover */
            border-color: #1faa59 !important;
        }
</style>

<div class="container py-5 mb-5 pb-5">
    <div class="row justify-content-center">
        <div class="col-12 text-center mb-4">
            <h1 class="text-center">Confirmar tu Compra</h1>
            <p class="lead">Revisa tu pedido y registra tu pago para finalizar la compra.</p>
        </div>
    </div>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger mb-4">
            @TempData["Error"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        // Se añade la lógica de manejo de errores de tasa de cambio
        <div class="alert alert-warning mb-4">
            <i class="fas fa-exclamation-triangle me-2"></i> @TempData["ErrorMessage"]
        </div>
    }

    <div class="row mb-5 pb-5">

        <div class="col-md-6 mb-4 order-1 order-md-2">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-edit me-2"></i> Registrar Pago y Comprobante</h5>
                </div>
                <div class="card-body">
                    <form asp-controller="Pedido" asp-action="ProcesarPago" method="post" enctype="multipart/form-data">
                        <input type="hidden" name="pedidoId" value="@Model.PedidoId" />

                        <div class="mb-3">
                            <label for="MetodoPago" class="form-label">Método de Pago</label>
                            <select class="form-control" id="MetodoPago" name="metodoPago" required>
                                <option value="" disabled selected>Seleccione un método</option>
                                <option value="Transferencia Bancaria">Transferencia Bancaria</option>
                                <option value="Pago Móvil">Pago Móvil</option>
                                <option value="PayPal">PayPal</option>
                            </select>
                        </div>

                        <div id="payment-info-box" style="display:none;">
                            <h5>Datos para Realizar el Pago</h5>
                            <div id="payment-details-content">
                            </div>
                        </div>

                        <div class="mb-3 mt-4">
                            <label for="ReferenciaPago" class="form-label">Referencia del Pago</label>
                            <input type="text" class="form-control" id="ReferenciaPago" name="referenciaPago" placeholder="Ingrese N° de transacción o Hash" required>
                        </div>
                        <div class="mb-3">
                            <label for="comprobanteArchivo" class="form-label">Subir Comprobante (PDF, JPG, PNG)</label>
                            <input type="file" class="form-control" id="comprobanteArchivo" name="comprobanteArchivo" accept=".pdf,.jpg,.jpeg,.png" required>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Enviar Comprobante</button>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-6 mb-4 order-2 order-md-1">
            <h3 class="h4">Resumen del Pedido (<span class="text-secondary fw-normal">#@Model.PedidoId</span>)</h3>
            <ul class="list-group mb-3">
                @foreach (var articulo in Model.Articulos)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span class="text-truncate me-3">@articulo.TituloItem</span>
                        <span class="badge bg-primary rounded-pill flex-shrink-0">@articulo.Precio.ToString("N2", cultureUS) USD</span>
                    </li>
                }
            </ul>

            <div class="p-3 bg-white border rounded">
                <div class="d-flex justify-content-between align-items-center mb-1">
                    <h5 class="mb-0 text-secondary">Total en Dólares (USD):</h5>
                    <h5 class="mb-0" style="color:var(--color-primary); font-weight:700;">@Model.Total.ToString("N2", cultureUS) USD</h5>
                </div>
                <div class="d-flex justify-content-between align-items-center border-top pt-2 mt-2">
                    <h4 class="mb-0">Total a pagar en VES:</h4>
                    <h4 class="text-ves mb-0">@totalVes.ToString("N2", cultureVE) VES</h4>
                </div>
                <small class="text-muted d-block text-end">Tasa BCV del día: @Model.TasaBCV.Value.ToString("N4", cultureUS) VES/USD</small>
            </div>
            @{
                var whatsappNumber = "584241544523"; // Tu número (Cod. País + Número sin 0 inicial)
                var whatsappMessage = $"Hola, necesito asistencia con el pago del Pedido #{Model.PedidoId}. ¿Me pueden ayudar?";
                var encodedMessage = System.Web.HttpUtility.UrlEncode(whatsappMessage);
                var whatsappLink = $"https://wa.me/{whatsappNumber}?text={encodedMessage}";
            }
            <div class="d-grid gap-2 mt-4">
                <a href="@whatsappLink" target="_blank" class="btn btn-whatsapp-assistance btn-lg">
                    <i class="fab fa-whatsapp me-2"></i> Pagar o Consultar por WhatsApp
                </a>
            </div>

            <div class="mt-4 p-3 alert alert-secondary text-center">
                <i class="fas fa-clock me-2"></i> Una vez enviado el comprobante, validaremos el pago en un máximo de 24 horas. Recibirás un correo de confirmación.
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>

    <script>
        $(document).ready(function () {

            // *** CAMBIO CLAVE: Variables JS con formato para USD, VES y Tasa ***
            // Usamos un formato genérico (N2) con cultura Invariant para evitar problemas de comas/puntos en JS
            const formattedTotalUSD = '@Html.Raw(Model.Total.ToString("N2", cultureUS))';
            // Formateamos el total VES con su cultura
            const formattedTotalVES = '@Html.Raw(totalVes.ToString("N2", cultureVE))';
            const tasaHoy = '@Model.TasaBCV.Value.ToString("N4", cultureUS)';


            if (typeof jQuery == 'undefined') {
                console.error('Error: jQuery no está cargado. La funcionalidad de cambio de método de pago no funcionará.');
                return; // Detener el script si jQuery no está
            }

            // Objeto JSON con la información de pago
            const PAYMENT_DETAILS = {
                "Transferencia Bancaria": `
                    <p><strong>Monto a Pagar:</strong> <span class="text-ves">${formattedTotalVES} VES</span></p>
                    <p class="mb-2"><small class="text-muted">Tasa Aplicada: ${tasaHoy} VES/USD</small></p>
                    <hr class="my-2"/>
                    <div class="info-item"><strong>Banco:</strong> Banco Universal Monocromático</div>
                    <div class="info-item"><strong>RUC/C.I.:</strong> V-12.345.678</div>
                    <div class="info-item"><strong>N° Cuenta:</strong> 0102-0304-0506-0708-0910</div>
                    <div class="info-item"><strong>Correo:</strong> pagos@miempresa.com</div>
                `,
                "Pago Móvil": `
                    <p><strong>Monto a Pagar:</strong> <span class="text-ves">${formattedTotalVES} VES</span></p>
                    <p class="mb-2"><small class="text-muted">Tasa Aplicada: ${tasaHoy} VES/USD</small></p>
                    <hr class="my-2"/>
                    <div class="info-item"><strong>Banco:</strong> Banco Móvil Digital</div>
                    <div class="info-item"><strong>C.I.:</strong> V-8.765.432</div>
                    <div class="info-item"><strong>Teléfono:</strong> 0412-1234567</div>
                `,
                "PayPal": `
                    <p><strong>Monto a Pagar:</strong> <span class="text-primary">${formattedTotalUSD} USD</span></p>
                    <p class="mb-2"><small class="text-muted">Tasa de Referencia: ${tasaHoy} VES/USD</small></p>
                    <hr class="my-2"/>
                    <div class="info-item"><strong>Cuenta PayPal:</strong> miempresa@paypal.com</div>
                    <div class="info-item"><strong>Instrucciones:</strong> Debe realizar el pago directamente. Adjunte el comprobante de PayPal.</div>
                `
            };

            const $select = $('#MetodoPago');
            const $infoBox = $('#payment-info-box');
            const $content = $('#payment-details-content');

            function updatePaymentInfo() {
                const selectedMethod = $select.val();

                if (selectedMethod && PAYMENT_DETAILS[selectedMethod]) {
                    // Si el contenido existe, lo insertamos
                    $content.html(PAYMENT_DETAILS[selectedMethod]);
                    $infoBox.slideDown(200);
                } else {
                    // Si no hay método o no hay detalles, lo ocultamos
                    $infoBox.slideUp(200);
                }
            }

            // Manejar el cambio de selección
            $select.on('change', updatePaymentInfo);

            // Si hay un valor seleccionado al cargar (ej. después de un post fallido), mostrar la info
            if ($select.val()) {
                updatePaymentInfo();
            }
        });
    </script>
}