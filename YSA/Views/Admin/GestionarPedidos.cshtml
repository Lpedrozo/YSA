@model YSA.Web.Models.ViewModels.DashboardPedidosViewModel
@{
    ViewData["Title"] = "Gestión de Pedidos";
}

<style>
    /* ------------------------------------- */
    /* 1. Variables B&W y Estilos Generales  */
    /* ------------------------------------- */
    :root {
        --color-secondary: #000000; /* Negro Puro (Título, Hover) */
        --color-primary: #333333; /* Gris Oscuro (Botones, Acentos) */
        --color-secondary-light: #5a5a5a; /* Gris Medio para acciones secundarias */
        --color-text-muted: #6a6a6a; /* Gris medio (Descripción) */
        --color-background-light: #f7f7f7; /* Fondo general de la página */
        --color-background-white: #ffffff; /* Fondo para las tarjetas */
        --color-border-light: #e0e0e0; /* Borde sutil */
        --color-danger: #cc0000; /* Rojo sutil para acciones peligrosas */
    }

    body {
        background-color: var(--color-background-light);
    }

    h1 {
        color: var(--color-secondary);
        font-weight: 700;
        font-size: 2rem;
    }

    /* Botón "Aprobar Pago" (Estilo principal) */
    .btn-aprobar {
        background-color: var(--color-primary) !important;
        border-color: var(--color-primary) !important;
        color: white !important;
        font-weight: 600;
        transition: background-color 0.2s;
        border-radius: 6px;
    }

        .btn-aprobar:hover {
            background-color: var(--color-secondary) !important;
            border-color: var(--color-secondary) !important;
        }

    /* Botón Secundario (Ver/Rechazar) */
    .btn-detalle {
        color: var(--color-secondary-light) !important;
        border-color: var(--color-border-light) !important;
        background-color: transparent !important;
        font-weight: 600;
        border-radius: 6px;
    }

        .btn-detalle:hover {
            color: var(--color-primary) !important;
            background-color: var(--color-border-light) !important;
        }

    /* -------------------------- */
    /* 2. Estilos de Cards        */
    /* -------------------------- */
    .pedido-card {
        border: 1px solid var(--color-border-light);
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        transition: transform 0.2s, box-shadow 0.2s;
        margin-bottom: 20px;
        background-color: var(--color-background-white);
        height: 100%; /* Asegura que todas las tarjetas tengan la misma altura */
        display: flex;
        flex-direction: column;
    }

        .pedido-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .card-title-lg {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--color-secondary);
        margin-bottom: 0.25rem;
    }

    .card-info-item {
        display: flex;
        justify-content: space-between;
        padding: 5px 0;
        border-bottom: 1px dashed var(--color-border-light);
    }

        .card-info-item:last-child {
            border-bottom: none;
        }

    .card-info-label {
        font-weight: 600;
        color: var(--color-text-muted);
    }

    .card-info-value {
        color: var(--color-primary);
        font-weight: 500;
    }

    .card-body-scroll {
        /* Permite que el cuerpo principal crezca y empuje el footer */
        flex-grow: 1;
    }

    /* Estilo para la lista de artículos (si se incluyera) */
    .item-list {
        list-style: none;
        padding-left: 0;
        margin-bottom: 1rem;
        max-height: 100px;
        overflow-y: auto; /* Scroll si hay muchos ítems */
        border: 1px solid var(--color-border-light);
        padding: 10px;
        border-radius: 4px;
        background-color: var(--color-background-light);
    }

        .item-list li {
            font-size: 0.9rem;
            color: var(--color-text-muted);
            line-height: 1.4;
        }

    .btn-comprobante {
        color: #0d6efd !important; /* Azul para distinguirlo */
        border-color: #0d6efd !important;
        background-color: transparent !important;
        font-weight: 600;
        border-radius: 6px;
    }

        .btn-comprobante:hover {
            background-color: #0d6efd !important;
            color: white !important;
        }

    /* Estilo para manejar el scroll horizontal en pestañas para móviles */
    .nav-wrapper {
        overflow-x: auto;
    }
</style>

<div class="container mt-5 mb-5 pb-5">
    <h1 class="mb-4">Gestión de Pedidos y Pagos</h1>
    <hr style="border-top: 2px solid var(--color-border-light); opacity: 1; margin-bottom: 2rem;" />

    <div class="d-flex justify-content-between align-items-center mb-4">
        <a asp-action="Panel" asp-controller="Admin" class="btn btn-dark">
            <i class="fas fa-arrow-left me-2"></i> Regresar al panel
        </a>
    </div>

    <div class="nav-wrapper">
        <ul class="nav nav-tabs nav-fill flex-nowrap" id="pedidosTabs" role="tablist" style="min-width: 500px;">
            <li class="nav-item flex-shrink-0" role="presentation">
                <button class="nav-link active" id="validando-tab" data-bs-toggle="tab" data-bs-target="#validando" type="button" role="tab" aria-controls="validando" aria-selected="true">
                    <i class="fas fa-clock me-1"></i> Validando (@Model.PedidosValidando.Count)
                </button>
            </li>
            <li class="nav-item flex-shrink-0" role="presentation">
                <button class="nav-link" id="pendiente-tab" data-bs-toggle="tab" data-bs-target="#pendiente" type="button" role="tab" aria-controls="pendiente" aria-selected="false">
                    <i class="fas fa-wallet me-1"></i> Pendiente (@Model.PedidosPendientes.Count)
                </button>
            </li>
            <li class="nav-item flex-shrink-0" role="presentation">
                <button class="nav-link" id="completado-tab" data-bs-toggle="tab" data-bs-target="#completado" type="button" role="tab" aria-controls="completado" aria-selected="false">
                    <i class="fas fa-check-circle me-1"></i> Completados (@Model.PedidosCompletados.Count)
                </button>
            </li>
            <li class="nav-item flex-shrink-0" role="presentation">
                <button class="nav-link" id="cancelado-tab" data-bs-toggle="tab" data-bs-target="#cancelado" type="button" role="tab" aria-controls="cancelado" aria-selected="false">
                    <i class="fas fa-times-circle me-1"></i> Anulados (@Model.PedidosCancelados.Count)
                </button>
            </li>
        </ul>
    </div>


    <div class="tab-content" id="pedidosTabsContent">

        <div class="tab-pane fade show active" id="validando" role="tabpanel" aria-labelledby="validando-tab">
            @await Html.PartialAsync("_ListaPedidosPartial", Model.PedidosValidando)
        </div>

        <div class="tab-pane fade" id="pendiente" role="tabpanel" aria-labelledby="pendiente-tab">
            @await Html.PartialAsync("_ListaPedidosPartial", Model.PedidosPendientes)
        </div>

        <div class="tab-pane fade" id="completado" role="tabpanel" aria-labelledby="completado-tab">
            @await Html.PartialAsync("_ListaPedidosPartial", Model.PedidosCompletados)
        </div>

        <div class="tab-pane fade" id="cancelado" role="tabpanel" aria-labelledby="cancelado-tab">
            @await Html.PartialAsync("_ListaPedidosPartial", Model.PedidosCancelados)
        </div>

    </div>
</div>

@section Scripts {
    <script>
        // Lógica para mantener la pestaña activa después de la redirección
        document.addEventListener("DOMContentLoaded", function() {
            var activeTab = localStorage.getItem('activePedidoTab');
            if (activeTab) {
                // Si existe un tab guardado, intenta activarlo
                var tabTrigger = document.querySelector('#pedidosTabs button[data-bs-target="' + activeTab + '"]');
                if (tabTrigger) {
                    var tab = new bootstrap.Tab(tabTrigger);
                    tab.show();
                }
            } else {
                // Si no hay tab guardado, forzar la activación de la primera pestaña por defecto
                var firstTabTrigger = document.querySelector('#pedidosTabs button.nav-link');
                if (firstTabTrigger) {
                    var tab = new bootstrap.Tab(firstTabTrigger);
                    tab.show();
                }
            }

            // Guarda el tab activo en localStorage cada vez que uno se muestra
            document.querySelectorAll('#pedidosTabs button').forEach(function(tabEl) {
                tabEl.addEventListener('shown.bs.tab', function (event) {
                    localStorage.setItem('activePedidoTab', event.target.getAttribute('data-bs-target'));
                });
            });
        });
    </script>
}