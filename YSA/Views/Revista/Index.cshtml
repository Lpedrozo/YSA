@model YSA.Web.Models.ViewModels.RevistaIndexViewModel
@{
    ViewData["Title"] = "Revista de Arte y Cultura";
}

<style>
    /* ------------------------------------- */
    /* 1. VARIABLES & ESTILOS BASE (Mínimos cambios) */
    /* ------------------------------------- */
    :root {
        --color-primary: #333333; /* Gris Oscuro/Negro para acentos */
        --color-secondary: #000000; /* Negro para títulos */
        --color-accent: #666666; /* Gris medio para bordes o detalles */
        --color-background: #ffffff; /* Fondo Blanco */
        --color-text-dark: #333333; /* Texto Oscuro */
        --color-text-light: #ffffff; /* Texto Claro */
    }

    body {
        font-family: 'Poppins', sans-serif;
        background-color: var(--color-background);
        color: var(--color-text-dark);
    }

    .section-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: var(--color-secondary); /* Negro */
        padding-bottom: 0.5rem;
        margin-bottom: 2rem;
        display: inline-block;
    }

    .card {
        border-radius: 1rem;
        border: 1px solid #e0e0e0;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease-in-out;
        overflow: hidden;
        background-color: #fff;
        height: 100%;
    }

        .card:hover {
            transform: translateY(-5px) scale(1.01);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

    .card-img-top {
        height: 250px;
        object-fit: cover;
        width: 100%;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
    }

    /* Ajuste para las imágenes de Artistas, si es necesario */
    .artista-card .card-img-top {
        /* Ejemplo de altura diferente si la necesitas para artistas en esta vista */
        height: 200px; 
    }

    /* CARRUSEL CONTROLS */
    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        background-color: var(--color-primary); /* Gris oscuro */
        border-radius: 50%;
        padding: 1.5rem;
    }

    /* Bloque de contexto */
    .revista-context-block {
        padding: 1rem;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        border: 1px solid #ddd;
        border-radius: 1rem;
        background-color: #f7f7f7;
    }
    
    /* ------------------------------------- */
    /* 2. MEDIA QUERIES PARA RESPONSIVIDAD */
    /* ------------------------------------- */

    /* Extra Small devices (smartphones, less than 768px) */
    @@media (max-width: 767.98px) {
        .section-title {
            font-size: 2rem;
        }
        
        /* Ocultar flechas en móvil para mayor simplicidad */
        .carousel-control-prev,
        .carousel-control-next {
            display: none;
        }

        /* En móvil, los col pasan a ocupar el ancho total para que se muestre 1 por slide (manejado por JS) */
        .revista-context-block {
            margin-bottom: 1.5rem; /* Espacio debajo del bloque de texto en móvil */
        }
    }
    
    /* Small to Medium devices (Tablets, 768px to 991.98px) */
    @@media (min-width: 768px) and (max-width: 991.98px) {
        /* La estructura de Bootstrap MD (col-md-4, col-md-6) se aplicará automáticamente por el JS */
    }

    /* Large devices (Desktop, 992px and up) */
    @@media (min-width: 992px) {
        /* La estructura LG se aplicará automáticamente por el JS */
    }

</style>

<div class="container-fluid px-5 py-5">

    <div class="row mb-5 align-items-center">
        <div class="col-12 text-center mb-4">
            <h2 class="section-title">Nuestra Revista</h2>
        </div>

        <div class="col-lg-3 col-md-4 mb-4 mb-md-0">
            <div class="revista-context-block text-center">
                <h3>Eventos y Tendencias</h3>
                <p>
                    Sumérgete en el corazón vibrante de la cultura. Nuestra revista es la brújula que te guía a través de los eventos más significativos, desde exposiciones de arte de vanguardia hasta festivales culturales únicos. Aquí, la inspiración nunca duerme.
                </p>
                <p class="small text-muted mt-2">
                    Explora lo que viene y marca tu calendario.
                </p>
            </div>
        </div>

        <div class="col-lg-9 col-md-8">
            <div id="eventosCarousel" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    @{
                        // Generamos todos los items en una sola diapositiva INICIAL (la activa)
                        // El JS se encargará de reestructurarlos.
                        int totalEvents = Model.EventosElevarte?.Count() ?? 0;
                    }
                    @if (totalEvents > 0)
                    {
                        <div class="carousel-item active">
                            <div class="row g-4">
                                @foreach (var evento in Model.EventosElevarte)
                                {
                                    <div class="col-lg-4 col-md-6 col-12">
                                        <div class="card h-100 shadow-sm event-card" data-event-id="@evento.Id" style="cursor:pointer;">
                                            <img src="@Url.Content(evento.UrlImagen)" class="card-img-top" alt="@evento.Titulo">
                                            <div class="card-body">
                                                <h5 class="card-title">@evento.Titulo</h5>
                                                <p class="card-text">@evento.FechaEvento.ToString("dd MMMM yyyy")</p>
                                                <span class="badge rounded-pill bg-primary text-white">@evento.Lugar</span>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="carousel-item active">
                            <div class="alert alert-info text-center" role="alert">
                                No hay eventos próximos para mostrar.
                            </div>
                        </div>
                    }
                </div>
                
                @* Los botones se dejan aquí, el JS los mostrará/ocultará dinámicamente *@
                <button class="carousel-control-prev" type="button" data-bs-target="#eventosCarousel" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Anterior</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#eventosCarousel" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Siguiente</span>
                </button>
            </div>
        </div>
    </div>

    <hr class="my-5" />

    <div class="row mb-5 align-items-center">
        <div class="col-12 text-center mb-4">
            <h2 class="section-title">Explora a Nuestros Artistas Destacados</h2>
        </div>

        <div class="col-lg-9 col-md-8 order-md-1">
            <div id="artistasCarousel" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    @{
                        int totalArtists = Model.Artistas?.Count ?? 0;
                    }
                    @if (totalArtists > 0)
                    {
                        <div class="carousel-item active">
                            <div class="row g-4">
                                @foreach (var artista in Model.Artistas)
                                {
                                    <div class="col-lg-3 col-md-6 col-12"> @* Clases base para que se vean bien mientras carga el JS *@
                                        <div class="card h-100 shadow-sm artista-card" data-artista-id="@artista.Id" style="cursor:pointer;">
                                            <img src="@(string.IsNullOrEmpty(artista.Usuario.UrlImagen) ? "https://via.placeholder.com/400x200.png?text=Sin+Foto" : Url.Content(artista.Usuario.UrlImagen))"
                                                    class="card-img-top" alt="Foto de perfil de @artista.Usuario.Nombre">
                                            <div class="card-body text-center">
                                                <h5 class="card-title">@artista.Usuario.Nombre @artista.Usuario.Apellido</h5>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="carousel-item active">
                            <div class="alert alert-info text-center" role="alert">
                                No hay artistas para mostrar.
                            </div>
                        </div>
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#artistasCarousel" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Anterior</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#artistasCarousel" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Siguiente</span>
                </button>
            </div>
        </div>

        <div class="col-lg-3 col-md-4 order-md-2 mb-5 pb-5 mt-4 mt-md-0">
            <div class="revista-context-block text-center">
                <h3>El Talento Detrás del Arte</h3>
                <p>
                    Conoce a los visionarios que están redefiniendo el panorama cultural. Cada artista tiene una historia única, una voz poderosa y una obra que merece ser celebrada. Explora sus perfiles y sumérgete en sus mundos creativos.
                </p>
                <p class="small text-muted mt-2">
                    Haz click en las tarjetas para ver sus portafolios.
                </p>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {

            $(document).on('click', '.event-card', function () {
                const eventId = $(this).data('event-id');
                if (eventId) {
                    // Usamos la acción "DetalleEvento" que creamos anteriormente
                    const urlDetalle = '@Url.Action("DetalleEvento", "Revista")';
                    window.location.href = urlDetalle + '/' + eventId;
                }
            });
            // ----------------------------------------------------------------
            // SOLUCIÓN: Usar DELEGACIÓN DE EVENTOS para elementos dinámicos
            // Esto asegura que el clic funcione incluso si la tarjeta es clonada.
            // ----------------------------------------------------------------
            $(document).on('click', '.artista-card', function () {
                const artistaId = $(this).data('artista-id');
                if (artistaId) {
                    const urlDetalle = '@Url.Action("Detalles", "Artista")';
                    window.location.href = urlDetalle + '/' + artistaId;
                }
            });


            // ----------------------------------------------------
            // LÓGICA DE RESPONSIVIDAD DINÁMICA DE CAROUSEL
            // (La lógica que ya tenías y que hacía que se perdiera el evento)
            // ----------------------------------------------------

            function getItemsPerSlide() {
                if (window.innerWidth >= 992) { // Desktop (lg)
                    return {
                        eventos: 3,
                        artistas: 4
                    };
                } else if (window.innerWidth >= 768) { // Tablet (md)
                    return {
                        eventos: 2,
                        artistas: 2
                    };
                } else { // Mobile (sm, xs)
                    return {
                        eventos: 1,
                        artistas: 1
                    };
                }
            }

            // Función de reestructuración que reconstruye el HTML del carrusel basado en el tamaño
            function restructureCarouselBootstrap(carouselId, rawItems, itemsPerSlide) {
                const $carouselInner = $(`#${carouselId} .carousel-inner`);
                $carouselInner.empty(); // Limpiar el contenido existente

                if (rawItems.length === 0) {
                    const message = carouselId === 'eventosCarousel' ? 'No hay eventos próximos para mostrar.' : 'No hay artistas para mostrar.';
                    $carouselInner.append(`<div class="carousel-item active"><div class="alert alert-info text-center" role="alert">${message}</div></div>`);

                    // Ocultar botones de navegación si no hay ítems
                    $(`#${carouselId} .carousel-control-prev`).hide();
                    $(`#${carouselId} .carousel-control-next`).hide();
                    return;
                }

                const totalSlides = Math.ceil(rawItems.length / itemsPerSlide);

                // Mostrar/Ocultar botones de navegación
                $(`#${carouselId} .carousel-control-prev`).toggle(totalSlides > 1);
                $(`#${carouselId} .carousel-control-next`).toggle(totalSlides > 1);


                for (let i = 0; i < totalSlides; i++) {
                    const $slide = $(`<div class="carousel-item ${i === 0 ? 'active' : ''}"><div class="row g-4 justify-content-center"></div></div>`);
                    const $row = $slide.find('.row');
                    const startIndex = i * itemsPerSlide;
                    const itemsInSlide = rawItems.slice(startIndex, startIndex + itemsPerSlide);

                    itemsInSlide.forEach(item => {
                        // Importante: No clonar eventos aquí. La delegación los maneja.
                        const $card = $(item).clone(false);
                        let colClass;

                        if (carouselId === 'eventosCarousel') {
                            colClass = itemsPerSlide === 1 ? 'col-12' : (itemsPerSlide === 2 ? 'col-md-6' : 'col-lg-4');
                        } else { // artistasCarousel
                            colClass = itemsPerSlide === 1 ? 'col-12' : (itemsPerSlide === 2 ? 'col-md-6' : 'col-lg-3');
                        }

                        // Envuelve la tarjeta clonada en la columna correcta.
                        const $colDiv = $('<div>').addClass(colClass).append($card);
                        $row.append($colDiv);
                    });

                    $carouselInner.append($slide);
                }

                // Destruir y crear nueva instancia de Bootstrap Carousel
                const carouselElement = document.getElementById(carouselId);
                const bsCarousel = bootstrap.Carousel.getInstance(carouselElement);
                if (bsCarousel) {
                    bsCarousel.dispose();
                }
                new bootstrap.Carousel(carouselElement);
            }

            // 1. Obtener todos los elementos (tarjetas) de la estructura INICIAL de Razor
            const originalEventCards = [];
            $('#eventosCarousel .carousel-item .row > div').each(function() {
                originalEventCards.push($(this).children().get(0));
            });

            const originalArtistCards = [];
            $('#artistasCarousel .carousel-item .row > div').each(function() {
                originalArtistCards.push($(this).children().get(0));
            });


            // 2. Función de inicialización
            function initializeCarousels() {
                const itemsConfig = getItemsPerSlide();

                // Reestructurar eventos
                restructureCarouselBootstrap('eventosCarousel', originalEventCards, itemsConfig.eventos);

                // Reestructurar artistas
                restructureCarouselBootstrap('artistasCarousel', originalArtistCards, itemsConfig.artistas);
            }

            // Inicializar al cargar la página
            initializeCarousels();

            // 3. Manejar el evento de redimensionamiento de la ventana
            let resizeTimer;
            $(window).on('resize', function (e) {
                clearTimeout(resizeTimer);
                resizeTimer = setTimeout(function () {
                    initializeCarousels();
                }, 250); // Pequeño retraso para optimizar
            });
        });
    </script>
}